<!DOCTYPE html>
<html>
<head>
	<%- partial('partials/header/header-start.ejs', {
			title: process.env.APP_NAME + ' - SQL Queryer'
		}) %>
	<%- partial('partials/resources.ejs', {
			stylesheets: [
				'/public/lib/bootstrap/css/bootstrap.min.css',
				'/public/gf-style.css'
			],
			scripts: [
				'/public/lib/jquery/jquery.min.js',
				'/public/lib/gf/gf-data-bind.js',
				'/public/lib/pretty-json.js'
			]
		}) %>

	<!-- style for this page
		(not public as to not hint that such a page exists) -->
	<style type="text/css">
		.input-area {
			padding: 8px;
		}
		.query-history-entry {
			margin-bottom: 12px;
			margin-left: 0px;
		}
		.query-history-entry .query,
		.query-history-entry .response {
			padding: 4px;
			padding-left: 6px;
		}
		.query-history-entry .query {
			font-weight: bold;
			margin-bottom: 0px;
			background-color: #EEEEEE;
			border-bottom: solid 1px #CCCCCC;
		}
		.query-history-entry .response {
			background-color: #DDDDDD;
			max-height: 200px;
			overflow-y: auto;
			font-family: "Courier", monospace;
		}
	</style>

	<!-- style for this page
		(not public as to not hint that such a page exists or how to access the database) -->
	<script type="text/javascript">
		(function() {

			var sqlInputAreaSel = '.sql-input-area';	//selector for the sql input area
			var apiInputAreaSel = '.api-input-area';	//selector for the api input area
			var queryHistorySel = '#query-history';		//selector for the query history list

			$(document).ready(function() {
				var queryHistory = $(queryHistorySel);
				var sqlInputArea = $(sqlInputAreaSel);
				var apiInputArea = $(apiInputAreaSel);

				//initialize gfbind on query history and param-pairs
				queryHistory.gfbind_init();
				apiInputArea.find('.params .list').gfbind_init();

				//set the ways to add parameters
				apiInputArea.find('.params .add-param-button').click(function() {
					apiInputArea.find('.params .list').gfbind_append({});
				});

				//set the ways to trigger sql requests
				sqlInputArea.keydown(function(e) { if (e.keyCode == 13) { makeSqlQuery(); } });
				sqlInputArea.find('.execute-button').click(function() { makeSqlQuery(); });

				//set the ways to trigger api requests
				apiInputArea.keydown(function(e) { if (e.keyCode == 13) { makeApiQuery(); } });
				apiInputArea.find('.execute-button').click(function() { makeApiQuery(); });
			});

			function makeSqlQuery() {
				var query = $(sqlInputAreaSel).find('.query').val();

				$.ajax({
					type: 'POST',
					data: { query: query },
					url: '/api/devtools/sqlquery',
					success: function(response) {
						handleSuccess('SQL ' + query, response);
					},
					error: function(response) {
						handleError('SQL ' + query, response);
					}
				});
			}

			function makeApiQuery() {
				var apiInputArea = $(apiInputAreaSel);

				var method = apiInputArea.find('.method').val();
				var url = apiInputArea.find('.url').val();
				var data = getApiParams(apiInputArea.find('.params .list'));

				$.ajax({
					type: method,
					data: data,
					url: url,
					success: function(response) {
						handleSuccess(method.toUpperCase() + ' ' + url, response);
					},
					error: function(response) {
						handleError(method.toUpperCase() + ' ' + url, response);
					}
				});
			}

			function getApiParams(jparamlist) {
				var data = {};				

				jparamlist.find('.param').each(function() {
					var jparam = $(this);
					var key = jparam.find('.key').val();
					var value = jparam.find('.value').val();

					if (key) data[key] = value;
				});

				console.log(data);
				return data;
			}

			function handleSuccess(query, response) {
				////bind it to the query history view
				var sql = {
					query: query,
					response: response
				};
				var queryHistory = $(queryHistorySel);
				queryHistory.gfbind_prepend(sql);

				//pretty print all the elements
				$('.query-history-entry .response').each(function() {
					try {
						$(this).prettyJson(JSON.parse($(this).text()), 3);
					}
					catch (ex) {
						//do nothing: the element did not contain JSON
					}
				});
			}

			function handleError(query, response) {
				//TODO bind that it was an error to the query history
			}

		})();
	</script>
	<%- partial('partials/header/header-end.ejs') %>
</head>
<body>
	<%- partial('partials/topbar.ejs') %>
	<%- partial('partials/shadowbox.ejs') %>

	<div class="container container-fluid">
		<!-- the title -->
		<div class="row-fluid">
			<h1>Command line</h1>
			<label>
				Use this to execute API requests or SQL queries directly on the database.
				Output is printed in JSON format
			</label>
		</div>

		<div class="row-fluid">
			<ul class="nav nav-tabs">
				<li class="active"><a href="#api-pane" data-toggle="tab">API Reqest</a></li>
				<li><a href="#sql-pane" data-toggle="tab">SQL Query</a></li>
			</ul>

			<div class="tab-content">
				<!-- the API input area -->
				<div id="api-pane" class="tab-pane active">
					<div class="input-area api-input-area alert">
						<label><strong>API Request:</strong> enter a query method, url and args</label>
						<input class="method query span1" type="text" placeholder="get">
						<input class="url query span8" type="text" placeholder="/api/users/me">
						<input class="execute-button span2 btn btn-primary" type="button" value="Execute">

						<div class="params">
							<div class="list">
								<div class="param gf-bind-template">
									<input class="key span2" type="text" placeholder="key">
									<input class="value span7" type="text" placeholder="value">
								</div>
							</div>
							<input class="add-param-button btn" type="button" value="Add param">
						</div>			
					</div>
				</div>

				<!-- the SQL input area -->
				<div id="sql-pane" class="tab-pane">
					<div class="input-area sql-input-area alert">
						<label><strong>SQL Query:</strong> enter a query <strong>without</strong> the ending semicolon</label>
						<input class="query span9" type="text" placeholder="show tables/select * from ..."></input>
						<input class="execute-button span2 btn btn-primary" type="button" value="Execute"></input>
					</div>
				</div>
			</div>
		</div>

		<!-- the past query history -->
		<div class="row-fluid">
			<h2>Query history</h2>
			<div id="query-history">
				<!-- the query result template -->
				<div class="query-history-entry gf-bind-template">
					<p class="query" data-gf-bind='{"innerText":"query"}'>
						select * from ExampleQuery where query='show tables'
					</p>				
					<p class="response" data-gf-bind='{"innerText":"response"}'>
						{ error: 'this is just an example!' }
					</p>
				</div>
			</div>
		</div>

		<!-- marker of the end of the query history -->
		<div class="row-fluid">
			<div class="alert">
				End of query history
			</div>
		</div>
	</div>
</body>
</html>
